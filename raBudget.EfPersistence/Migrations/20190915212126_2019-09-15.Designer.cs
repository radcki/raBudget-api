// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using raBudget.EfPersistence.Contexts;

namespace raBudget.EfPersistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190915212126_2019-09-15")]
    partial class _20190915
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("raBudget.Domain.Entities.Allocation", b =>
                {
                    b.Property<int>("AllocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AllocationDateTime");

                    b.Property<double>("Amount");

                    b.Property<int>("BudgetCategoryId");

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 15, 23, 21, 26, 122, DateTimeKind.Local).AddTicks(4651));

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("AllocationId");

                    b.HasIndex("AllocationDateTime");

                    b.HasIndex("BudgetCategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrencyCode");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("OwnedByUserId");

                    b.Property<DateTime>("StartingDate");

                    b.HasKey("Id");

                    b.HasIndex("OwnedByUserId");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BudgetId");

                    b.Property<string>("Icon");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.ToTable("BudgetCategories");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategoryBudgetedAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BudgetCategoryId");

                    b.Property<double>("MonthlyAmount");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("BudgetCategoryId");

                    b.ToTable("BudgetCategoryBudgetedAmounts");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetShare", b =>
                {
                    b.Property<int>("BudgetShareId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BudgetId");

                    b.Property<Guid>("SharedWithUserId");

                    b.HasKey("BudgetShareId");

                    b.HasIndex("BudgetId");

                    b.HasIndex("SharedWithUserId");

                    b.ToTable("BudgetShares");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("CurrencyCode");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("EnglishName")
                        .IsRequired();

                    b.Property<string>("NativeName")
                        .IsRequired();

                    b.Property<string>("Symbol")
                        .IsRequired();

                    b.HasKey("CurrencyCode");

                    b.HasIndex("Code");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            CurrencyCode = 8,
                            Code = "ALL",
                            EnglishName = "Albanian Lek",
                            NativeName = "Leku shqiptar",
                            Symbol = "Lekë"
                        },
                        new
                        {
                            CurrencyCode = 12,
                            Code = "DZD",
                            EnglishName = "Algerian Dinar",
                            NativeName = "دينار جزائري",
                            Symbol = "د.ج.‏"
                        },
                        new
                        {
                            CurrencyCode = 32,
                            Code = "ARS",
                            EnglishName = "Argentine Peso",
                            NativeName = "peso argentino",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 36,
                            Code = "AUD",
                            EnglishName = "Australian Dollar",
                            NativeName = "Australian Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 48,
                            Code = "BHD",
                            EnglishName = "Bahraini Dinar",
                            NativeName = "دينار بحريني",
                            Symbol = "د.ب.‏"
                        },
                        new
                        {
                            CurrencyCode = 50,
                            Code = "BDT",
                            EnglishName = "Bangladeshi Taka",
                            NativeName = "বাংলাদেশী টাকা",
                            Symbol = "৳"
                        },
                        new
                        {
                            CurrencyCode = 51,
                            Code = "AMD",
                            EnglishName = "Armenian Dram",
                            NativeName = "դրամ",
                            Symbol = "֏"
                        },
                        new
                        {
                            CurrencyCode = 68,
                            Code = "BOB",
                            EnglishName = "Bolivian Boliviano",
                            NativeName = "boliviano",
                            Symbol = "Bs"
                        },
                        new
                        {
                            CurrencyCode = 84,
                            Code = "BZD",
                            EnglishName = "Belize Dollar",
                            NativeName = "Belize Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 96,
                            Code = "BND",
                            EnglishName = "Brunei Dollar",
                            NativeName = "Dolar Brunei",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 116,
                            Code = "KHR",
                            EnglishName = "Cambodian Riel",
                            NativeName = "x179Aៀល",
                            Symbol = "៛"
                        },
                        new
                        {
                            CurrencyCode = 124,
                            Code = "CAD",
                            EnglishName = "Canadian Dollar",
                            NativeName = "Canadian Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 144,
                            Code = "LKR",
                            EnglishName = "Sri Lankan Rupee",
                            NativeName = "ශ්‍රී ලංකා රුපියල",
                            Symbol = "රු."
                        },
                        new
                        {
                            CurrencyCode = 152,
                            Code = "CLP",
                            EnglishName = "Chilean Peso",
                            NativeName = "Peso",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 156,
                            Code = "CNY",
                            EnglishName = "Chinese Yuan",
                            NativeName = "མི་དམངས་ཤོག་སྒོཪ།",
                            Symbol = "¥"
                        },
                        new
                        {
                            CurrencyCode = 170,
                            Code = "COP",
                            EnglishName = "Colombian Peso",
                            NativeName = "peso colombiano",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 188,
                            Code = "CRC",
                            EnglishName = "Costa Rican Colón",
                            NativeName = "colón costarricense",
                            Symbol = "₡"
                        },
                        new
                        {
                            CurrencyCode = 191,
                            Code = "HRK",
                            EnglishName = "Croatian Kuna",
                            NativeName = "hrvatska kuna",
                            Symbol = "kn"
                        },
                        new
                        {
                            CurrencyCode = 203,
                            Code = "CZK",
                            EnglishName = "Czech Koruna",
                            NativeName = "česká koruna",
                            Symbol = "Kč"
                        },
                        new
                        {
                            CurrencyCode = 208,
                            Code = "DKK",
                            EnglishName = "Danish Krone",
                            NativeName = "Dansk krone",
                            Symbol = "kr."
                        },
                        new
                        {
                            CurrencyCode = 214,
                            Code = "DOP",
                            EnglishName = "Dominican Peso",
                            NativeName = "peso dominicano",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 230,
                            Code = "ETB",
                            EnglishName = "Ethiopian Birr",
                            NativeName = "የኢትዮጵያ ብር",
                            Symbol = "ብር"
                        },
                        new
                        {
                            CurrencyCode = 320,
                            Code = "GTQ",
                            EnglishName = "Guatemalan Quetzal",
                            NativeName = "quetzal",
                            Symbol = "Q"
                        },
                        new
                        {
                            CurrencyCode = 340,
                            Code = "HNL",
                            EnglishName = "Honduran Lempira",
                            NativeName = "lempira hondureño",
                            Symbol = "L"
                        },
                        new
                        {
                            CurrencyCode = 344,
                            Code = "HKD",
                            EnglishName = "Hong Kong Dollar",
                            NativeName = "Hong Kong Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 348,
                            Code = "HUF",
                            EnglishName = "Hungarian Forint",
                            NativeName = "magyar forint",
                            Symbol = "Ft"
                        },
                        new
                        {
                            CurrencyCode = 352,
                            Code = "ISK",
                            EnglishName = "Icelandic Króna",
                            NativeName = "íslensk króna",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 356,
                            Code = "INR",
                            EnglishName = "Indian Rupee",
                            NativeName = "টকা",
                            Symbol = "₹"
                        },
                        new
                        {
                            CurrencyCode = 360,
                            Code = "IDR",
                            EnglishName = "Indonesian Rupiah",
                            NativeName = "Rupiah",
                            Symbol = "Rp"
                        },
                        new
                        {
                            CurrencyCode = 364,
                            Code = "IRR",
                            EnglishName = "Iranian Rial",
                            NativeName = "ریال",
                            Symbol = "ريال"
                        },
                        new
                        {
                            CurrencyCode = 368,
                            Code = "IQD",
                            EnglishName = "Iraqi Dinar",
                            NativeName = "دينار عراقي",
                            Symbol = "د.ع.‏"
                        },
                        new
                        {
                            CurrencyCode = 376,
                            Code = "ILS",
                            EnglishName = "Israeli New Shekel",
                            NativeName = "שקל חדש",
                            Symbol = "₪"
                        },
                        new
                        {
                            CurrencyCode = 388,
                            Code = "JMD",
                            EnglishName = "Jamaican Dollar",
                            NativeName = "Jamaican Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 392,
                            Code = "JPY",
                            EnglishName = "Japanese Yen",
                            NativeName = "円",
                            Symbol = "¥"
                        },
                        new
                        {
                            CurrencyCode = 398,
                            Code = "KZT",
                            EnglishName = "Kazakhstani Tenge",
                            NativeName = "Қазақстан теңгесі",
                            Symbol = "₸"
                        },
                        new
                        {
                            CurrencyCode = 400,
                            Code = "JOD",
                            EnglishName = "Jordanian Dinar",
                            NativeName = "دينار اردني",
                            Symbol = "د.ا.‏"
                        },
                        new
                        {
                            CurrencyCode = 404,
                            Code = "KES",
                            EnglishName = "Kenyan Shilling",
                            NativeName = "Shilingi ya Kenya",
                            Symbol = "Ksh"
                        },
                        new
                        {
                            CurrencyCode = 410,
                            Code = "KRW",
                            EnglishName = "South Korean Won",
                            NativeName = "원",
                            Symbol = "₩"
                        },
                        new
                        {
                            CurrencyCode = 414,
                            Code = "KWD",
                            EnglishName = "Kuwaiti Dinar",
                            NativeName = "دينار كويتي",
                            Symbol = "د.ك.‏"
                        },
                        new
                        {
                            CurrencyCode = 417,
                            Code = "KGS",
                            EnglishName = "Kyrgystani Som",
                            NativeName = "сом",
                            Symbol = "сом"
                        },
                        new
                        {
                            CurrencyCode = 418,
                            Code = "LAK",
                            EnglishName = "Laotian Kip",
                            NativeName = "ລາວ ກີບ",
                            Symbol = "₭"
                        },
                        new
                        {
                            CurrencyCode = 422,
                            Code = "LBP",
                            EnglishName = "Lebanese Pound",
                            NativeName = "ليرة لبناني",
                            Symbol = "ل.ل.‏"
                        },
                        new
                        {
                            CurrencyCode = 434,
                            Code = "LYD",
                            EnglishName = "Libyan Dinar",
                            NativeName = "دينار ليبي",
                            Symbol = "د.ل.‏"
                        },
                        new
                        {
                            CurrencyCode = 446,
                            Code = "MOP",
                            EnglishName = "Macanese Pataca",
                            NativeName = "澳門幣",
                            Symbol = "MOP"
                        },
                        new
                        {
                            CurrencyCode = 458,
                            Code = "MYR",
                            EnglishName = "Malaysian Ringgit",
                            NativeName = "Ringgit Malaysia",
                            Symbol = "RM"
                        },
                        new
                        {
                            CurrencyCode = 462,
                            Code = "MVR",
                            EnglishName = "Maldivian Rufiyaa",
                            NativeName = "ރުފިޔާ",
                            Symbol = "ރ."
                        },
                        new
                        {
                            CurrencyCode = 484,
                            Code = "MXN",
                            EnglishName = "Mexican Peso",
                            NativeName = "Peso",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 496,
                            Code = "MNT",
                            EnglishName = "Mongolian Tugrik",
                            NativeName = "төгрөг",
                            Symbol = "₮"
                        },
                        new
                        {
                            CurrencyCode = 504,
                            Code = "MAD",
                            EnglishName = "Moroccan Dirham",
                            NativeName = "درهم مغربي",
                            Symbol = "د.م.‏"
                        },
                        new
                        {
                            CurrencyCode = 512,
                            Code = "OMR",
                            EnglishName = "Omani Rial",
                            NativeName = "ريال عماني",
                            Symbol = "ر.ع.‏"
                        },
                        new
                        {
                            CurrencyCode = 524,
                            Code = "NPR",
                            EnglishName = "Nepalese Rupee",
                            NativeName = "रुपैयाँ",
                            Symbol = "रु"
                        },
                        new
                        {
                            CurrencyCode = 554,
                            Code = "NZD",
                            EnglishName = "New Zealand Dollar",
                            NativeName = "New Zealand Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 558,
                            Code = "NIO",
                            EnglishName = "Nicaraguan Córdoba",
                            NativeName = "córdoba nicaragüense",
                            Symbol = "C$"
                        },
                        new
                        {
                            CurrencyCode = 578,
                            Code = "NOK",
                            EnglishName = "Norwegian Krone",
                            NativeName = "norske kroner",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 586,
                            Code = "PKR",
                            EnglishName = "Pakistani Rupee",
                            NativeName = "روپيه",
                            Symbol = "Rs"
                        },
                        new
                        {
                            CurrencyCode = 590,
                            Code = "PAB",
                            EnglishName = "Panamanian Balboa",
                            NativeName = "balboa panameño",
                            Symbol = "B/."
                        },
                        new
                        {
                            CurrencyCode = 600,
                            Code = "PYG",
                            EnglishName = "Paraguayan Guarani",
                            NativeName = "guaraní paraguayo",
                            Symbol = "₲"
                        },
                        new
                        {
                            CurrencyCode = 604,
                            Code = "PEN",
                            EnglishName = "Peruvian Sol",
                            NativeName = "sol peruano",
                            Symbol = "S/"
                        },
                        new
                        {
                            CurrencyCode = 608,
                            Code = "PHP",
                            EnglishName = "Philippine Piso",
                            NativeName = "Philippine Piso",
                            Symbol = "₱"
                        },
                        new
                        {
                            CurrencyCode = 634,
                            Code = "QAR",
                            EnglishName = "Qatari Rial",
                            NativeName = "ريال قطري",
                            Symbol = "ر.ق.‏"
                        },
                        new
                        {
                            CurrencyCode = 643,
                            Code = "RUB",
                            EnglishName = "Russian Ruble",
                            NativeName = "һум",
                            Symbol = "₽"
                        },
                        new
                        {
                            CurrencyCode = 646,
                            Code = "RWF",
                            EnglishName = "Rwandan Franc",
                            NativeName = "Rwandan Franc",
                            Symbol = "RF"
                        },
                        new
                        {
                            CurrencyCode = 682,
                            Code = "SAR",
                            EnglishName = "Saudi Riyal",
                            NativeName = "ريال سعودي",
                            Symbol = "ر.س.‏"
                        },
                        new
                        {
                            CurrencyCode = 702,
                            Code = "SGD",
                            EnglishName = "Singapore Dollar",
                            NativeName = "Singapore Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 704,
                            Code = "VND",
                            EnglishName = "Vietnamese Dong",
                            NativeName = "Đồng",
                            Symbol = "₫"
                        },
                        new
                        {
                            CurrencyCode = 710,
                            Code = "ZAR",
                            EnglishName = "South African Rand",
                            NativeName = "Suid-Afrikaanse rand",
                            Symbol = "R"
                        },
                        new
                        {
                            CurrencyCode = 752,
                            Code = "SEK",
                            EnglishName = "Swedish Krona",
                            NativeName = "ruvdnu",
                            Symbol = "kr"
                        },
                        new
                        {
                            CurrencyCode = 756,
                            Code = "CHF",
                            EnglishName = "Swiss Franc",
                            NativeName = "Schweizer Franken",
                            Symbol = "CHF"
                        },
                        new
                        {
                            CurrencyCode = 760,
                            Code = "SYP",
                            EnglishName = "Syrian Pound",
                            NativeName = "ليرة سوري",
                            Symbol = "ل.س.‏"
                        },
                        new
                        {
                            CurrencyCode = 764,
                            Code = "THB",
                            EnglishName = "Thai Baht",
                            NativeName = "บาท",
                            Symbol = "฿"
                        },
                        new
                        {
                            CurrencyCode = 780,
                            Code = "TTD",
                            EnglishName = "Trinidad and Tobago Dollar",
                            NativeName = "Trinidad and Tobago Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 784,
                            Code = "AED",
                            EnglishName = "United Arab Emirates Dirham",
                            NativeName = "درهم اماراتي",
                            Symbol = "د.إ.‏"
                        },
                        new
                        {
                            CurrencyCode = 788,
                            Code = "TND",
                            EnglishName = "Tunisian Dinar",
                            NativeName = "دينار تونسي",
                            Symbol = "د.ت.‏"
                        },
                        new
                        {
                            CurrencyCode = 807,
                            Code = "MKD",
                            EnglishName = "Macedonian Denar",
                            NativeName = "Македонски денар",
                            Symbol = "ден"
                        },
                        new
                        {
                            CurrencyCode = 818,
                            Code = "EGP",
                            EnglishName = "Egyptian Pound",
                            NativeName = "جنيه مصري",
                            Symbol = "ج.م.‏"
                        },
                        new
                        {
                            CurrencyCode = 826,
                            Code = "GBP",
                            EnglishName = "British Pound",
                            NativeName = "Punt Prydain",
                            Symbol = "£"
                        },
                        new
                        {
                            CurrencyCode = 840,
                            Code = "USD",
                            EnglishName = "US Dollar",
                            NativeName = "US Dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 858,
                            Code = "UYU",
                            EnglishName = "Uruguayan Peso",
                            NativeName = "peso uruguayo",
                            Symbol = "$"
                        },
                        new
                        {
                            CurrencyCode = 860,
                            Code = "UZS",
                            EnglishName = "Uzbekistani Som",
                            NativeName = "Ўзбекистон сўм",
                            Symbol = "сўм"
                        },
                        new
                        {
                            CurrencyCode = 886,
                            Code = "YER",
                            EnglishName = "Yemeni Rial",
                            NativeName = "ريال يمني",
                            Symbol = "ر.ي.‏"
                        },
                        new
                        {
                            CurrencyCode = 901,
                            Code = "TWD",
                            EnglishName = "New Taiwan Dollar",
                            NativeName = "新台幣",
                            Symbol = "NT$"
                        },
                        new
                        {
                            CurrencyCode = 941,
                            Code = "RSD",
                            EnglishName = "Serbian Dinar",
                            NativeName = "динар",
                            Symbol = "дин."
                        },
                        new
                        {
                            CurrencyCode = 944,
                            Code = "AZN",
                            EnglishName = "Azerbaijani Manat",
                            NativeName = "Aзәрбајҹан манаты",
                            Symbol = "₼"
                        },
                        new
                        {
                            CurrencyCode = 946,
                            Code = "RON",
                            EnglishName = "Romanian Leu",
                            NativeName = "leu românesc",
                            Symbol = "lei"
                        },
                        new
                        {
                            CurrencyCode = 949,
                            Code = "TRY",
                            EnglishName = "Turkish Lira",
                            NativeName = "Türk Lirası",
                            Symbol = "₺"
                        },
                        new
                        {
                            CurrencyCode = 952,
                            Code = "XOF",
                            EnglishName = "West African CFA Franc",
                            NativeName = "CFA",
                            Symbol = "CFA"
                        },
                        new
                        {
                            CurrencyCode = 971,
                            Code = "AFN",
                            EnglishName = "Afghan Afghani",
                            NativeName = "افغانى",
                            Symbol = "؋"
                        },
                        new
                        {
                            CurrencyCode = 972,
                            Code = "TJS",
                            EnglishName = "Tajikistani Somoni",
                            NativeName = "Сомонӣ",
                            Symbol = "смн"
                        },
                        new
                        {
                            CurrencyCode = 975,
                            Code = "BGN",
                            EnglishName = "Bulgarian Lev",
                            NativeName = "български лев",
                            Symbol = "лв."
                        },
                        new
                        {
                            CurrencyCode = 977,
                            Code = "BAM",
                            EnglishName = "Bosnia-Herzegovina Convertible Mark",
                            NativeName = "конвертибилна марка",
                            Symbol = "КМ"
                        },
                        new
                        {
                            CurrencyCode = 978,
                            Code = "EUR",
                            EnglishName = "Euro",
                            NativeName = "euro",
                            Symbol = "€"
                        },
                        new
                        {
                            CurrencyCode = 980,
                            Code = "UAH",
                            EnglishName = "Ukrainian Hryvnia",
                            NativeName = "гривня",
                            Symbol = "₴"
                        },
                        new
                        {
                            CurrencyCode = 981,
                            Code = "GEL",
                            EnglishName = "Georgian Lari",
                            NativeName = "ქართული ლარი",
                            Symbol = "₾"
                        },
                        new
                        {
                            CurrencyCode = 985,
                            Code = "PLN",
                            EnglishName = "Polish Zloty",
                            NativeName = "złoty polski",
                            Symbol = "zł"
                        },
                        new
                        {
                            CurrencyCode = 986,
                            Code = "BRL",
                            EnglishName = "Brazilian Real",
                            NativeName = "Real",
                            Symbol = "R$"
                        });
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<int>("BudgetCategoryId");

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 9, 15, 23, 21, 26, 265, DateTimeKind.Local).AddTicks(8532));

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime>("TransactionDateTime");

                    b.Property<int?>("TransactionScheduleId");

                    b.HasKey("TransactionId");

                    b.HasIndex("BudgetCategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("TransactionDateTime");

                    b.HasIndex("TransactionScheduleId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.TransactionSchedule", b =>
                {
                    b.Property<int>("TransactionScheduleId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<int>("BudgetCategoryId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("Frequency");

                    b.Property<int>("PeriodStep");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("TransactionScheduleId");

                    b.HasIndex("BudgetCategoryId");

                    b.HasIndex("StartDate");

                    b.ToTable("TransactionSchedules");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int?>("DefaultBudgetId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Allocation", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategory", "BudgetCategory")
                        .WithMany("Allocations")
                        .HasForeignKey("BudgetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("raBudget.Domain.Entities.User", "CreatedByUser")
                        .WithMany("RegisteredAllocations")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Budget", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.User", "OwnedByUser")
                        .WithMany("OwnedBudgets")
                        .HasForeignKey("OwnedByUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategory", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.Budget", "Budget")
                        .WithMany("BudgetCategories")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetCategoryBudgetedAmount", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategory", "BudgetCategory")
                        .WithMany("BudgetCategoryBudgetedAmounts")
                        .HasForeignKey("BudgetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("raBudget.Domain.Entities.BudgetShare", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.Budget", "Budget")
                        .WithMany("BudgetShares")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("raBudget.Domain.Entities.User", "SharedWithUser")
                        .WithMany("BudgetShares")
                        .HasForeignKey("SharedWithUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("raBudget.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategory", "BudgetCategory")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("raBudget.Domain.Entities.User", "CreatedByUser")
                        .WithMany("RegisteredTransactions")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("raBudget.Domain.Entities.TransactionSchedule", "TransactionSchedule")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionScheduleId");
                });

            modelBuilder.Entity("raBudget.Domain.Entities.TransactionSchedule", b =>
                {
                    b.HasOne("raBudget.Domain.Entities.BudgetCategory", "BudgetCategory")
                        .WithMany("TransactionSchedules")
                        .HasForeignKey("BudgetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
